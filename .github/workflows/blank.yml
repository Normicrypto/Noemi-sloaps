# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
https://GitHub.com/~noemi-platform-cap/
├── contracts/              # Smart contracts (Solidity)
│   ├── NPC.sol             # NPC token contract (ERC20/ERC721 or hybrid)
│   └── RewardRouter.sol    # Handles reward routing logic
│
├── migrations/             # Truffle/Hardhat scripts to deploy contracts
│   └── 1_deploy_contracts.js
│
├── test/                   # Smart contract tests (Mocha/Chai or Foundry)
│   └── test_npc.js
│
├── src/                    # Frontend or CLI tools
│   ├── cli/                # Go-based CLI tools
│   │   ├── main.go         # Command entry point
│   │   ├── config.yaml     # CLI config
│   │   └── internal/       # Your tool runner, workflows, guards
│
│   └── web/                # Optional: React web frontend
│       ├── App.jsx
│       └── components/
│
├── wallet/                 # Wallet connection & signing
│   ├── connect.js          # MetaMask integration (web3.js or ethers.js)
│   └── signer.js
│
├── go.mod                  # Go module file (for CLI tools)
├── hardhat.config.js       # Or truffle-config.js (Smart contract config)
├── README.md
└── .env                    # For private keys, Infura, Alchemy etc. (NEVER commit)RewardRouter.soltest_npc.jsconfig.yamlconnect.jsgo.modtruffle-config.jshttps://GitHub.com/~noemi-platform-cap/NPC.sol1_deploy_contracts.jsmain.goApp.jsxsigner.jshardhat.config.jsREADME.md
